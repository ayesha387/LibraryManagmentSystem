openapi: 3.0.0
info:
  title: Book API
  description: API for managing books
  version: 1.0.0
servers:
  - url: http://localhost:8080/
paths:
  /books/saveBooks:
    post:
      summary: Create a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookModel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/list:
    get:
      summary: Get all books
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /books/{id}:
    get:
      summary: Get a book by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    put:
      summary: Update a book
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookModel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /categories/saveCategories:
    post:
      summary: Create a new category
      requestBody:
        description: Category object that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /categories/list:
    get:
      summary: Get all categories
      responses:
        '200':
          description: List of all categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /categories/{id}:
    get:
      summary: Get category by ID
      parameters:
        - name: id
          in: path
          description: ID of the category
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Category retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    put:
      summary: Update category by ID
      parameters:
        - name: id
          in: path
          description: ID of the category
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Category object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      summary: Delete category by ID
      parameters:
        - name: id
          in: path
          description: ID of the category
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Category deleted successfully
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        edition:
          type: string
        isbn:
          type: string
      required:
        - title
        - author
        - edition
        - isbn
    BookModel:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        edition:
          type: string
        isbn:
          type: string
      required:
        - title
        - author
        - edition
        - isbn
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      example:
        id: 1
        name: "Category A"

